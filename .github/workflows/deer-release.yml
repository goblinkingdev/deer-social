name: Deer Release
on:
  workflow_dispatch:
  push:
    tags: ['v*.*.*']

jobs:
  build-android:
    name: Build Deer For Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle  
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Setup Just
        uses: extractions/setup-just@v2
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Copy example build settings
        run: |
          cp .env.example .env
          cp google-services.json.example google-services.json
      - name: Expo prebuild
        run: npx expo prebuild --no-install --platform android
      - name: Add BitDrift Maven Repository to Android build.gradle
        run: |
          # Define the repository snippet
          REPO_SNIPPET="        maven { url 'https://maven.sentry.io' }"
          
          # Define the target file
          BUILD_GRADLE_FILE="android/build.gradle"

          # Check if the repository line already exists
          if grep -q "maven.sentry.io" "$BUILD_GRADLE_FILE"; then
            echo "BitDrift/Sentry repository already present in $BUILD_GRADLE_FILE"
          else
            # Find the line containing 'mavenCentral()' or 'google()' within the allprojects.repositories block
            # and insert the new maven line after it.
            # This assumes the structure typically generated by Expo.
            # A more robust approach might be needed if the structure varies significantly.
            
            # First, try to insert after mavenCentral()
            sed -i.bak "/allprojects {/,/repositories {/b; /repositories {/!b; /mavenCentral()/a\\$REPO_SNIPPET" "$BUILD_GRADLE_FILE"
            INSERT_STATUS=$?

            # If inserting after mavenCentral() failed, try inserting after google()
            if [ $INSERT_STATUS -ne 0 ]; then
                sed -i.bak "/allprojects {/,/repositories {/b; /repositories {/!b; /google()/a\\$REPO_SNIPPET" "$BUILD_GRADLE_FILE"
                INSERT_STATUS=$?
            fi

            if [ $INSERT_STATUS -ne 0 ]; then
                echo "Warning: Could not insert repository line automatically after mavenCentral() or google()."
                echo "Checking if repositories block exists..."
                if grep -A 20 'allprojects {' "$BUILD_GRADLE_FILE" | grep -q 'repositories {'; then
                    echo "Found repositories block. Attempting to add repository at the end of the block..."
                    # Find the closing '}' of the repositories block within allprojects and insert before it
                    sed -i.bak "/allprojects {/,/repositories {/{ /repositories {/!b; }; /allprojects {/,/}/!b; /}/i\\$REPO_SNIPPET" "$BUILD_GRADLE_FILE"
                else
                    echo "Error: Could not find the 'repositories' block within 'allprojects' in $BUILD_GRADLE_FILE."
                    echo "Please check the structure manually."
                    exit 1
                fi
            else
                echo "Successfully added BitDrift/Sentry repository to $BUILD_GRADLE_FILE after mavenCentral() or google()."
            fi
          fi

          # Optional: Print the modified file for debugging (remove or comment out for production)
          # echo "--- Content of $BUILD_GRADLE_FILE after modification ---"
          # cat "$BUILD_GRADLE_FILE"
          # echo "--- End of $BUILD_GRADLE_FILE ---"
      - name: Build APK
        run: just dist-build-android-gradle
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: deer-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30
          if-no-files-found: error
  release: 
    name: Create GitHub Release
    needs: build-android
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: deer-release-apk
          path: ./artifacts
      - name: Generate release tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=deer-auto-release-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -n "$last_tag" ] && [ "$last_tag" != "$GITHUB_SHA" ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" "$last_tag"..HEAD >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" HEAD~1..HEAD >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "ü¶å Deer Release ${{ steps.tag.outputs.tag }}"
          draft: false
          prerelease: false
          files: |
            ./artifacts/deer-release.apk
          body: |
            ## ü¶å Deer Release ${{ steps.tag.outputs.tag }}

            ### üìù Changelog
            ${{ steps.changelog.outputs.changelog }}

            ### üîç Build Info
            - Built from commit: ${{ github.sha }}
            - Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ### üì• Downloads
            - **Android APK**: Download the `deer-release.apk` file below
            - **Web App**: Available at [deer-social.pages.dev](https://deer-social-7m8.pages.dev)

            ### üîí Security
            This release is signed and verified. The APK is built in un entorno limpio y reproducible.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # deploy-to-cloudflare:
  #   name: Deploy to Cloudflare Pages
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     deployments: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: yarn

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Update browserslist database
  #       run: npx update-browserslist-db@latest

  #     - name: Build Web App
  #       run: yarn build-web

  #     - name: Publish to Cloudflare Pages
  #       uses: cloudflare/pages-action@v1
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  #         projectName: 'deer-social'
  #         directory: 'web-build'
