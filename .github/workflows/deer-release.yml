# Nombre del workflow
name: Release deer

# Disparadores: Se ejecuta manualmente, en push a 'main', o en push de tags
on:
  workflow_dispatch:
  push:
    tags: ['v*.*.*']

# Variables de entorno globales
env:
  NODE_VERSION: '20'
  JAVA_VERSION: '17'

jobs:
  build-android:
    name: Build deer for Android
    runs-on: ubuntu-latest
    outputs:
      apk-path: ${{ steps.upload-artifact.outputs.artifact-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Just
        uses: extractions/setup-just@v2

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Copy example build settings
        run: |
          cp .env.example .env
          cp google-services.json.example google-services.json

      - name: Build APK
        run: just dist-build-android-gradle

      - name: Upload APK artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: deer-android-${{ github.run_number }}
          path: android/app/build/outputs/apk/release/deer-release.apk
          retention-days: 30

  deploy-to-cloudflare:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Update browserslist database
        run: npx update-browserslist-db@latest

      - name: Compile locale files
        run: yarn intl:compile

      - name: Build Web App
        run: yarn build-web

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'deer-social'
          directory: 'web-build'
          branch: 'main'

  release:
    name: Create GitHub Release
    needs: build-android
    runs-on: ubuntu-latest
    # Solo crear release si es un push de tag o workflow manual
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: deer-android-${{ github.run_number }}
          path: ./artifacts

      - name: Generate release tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=deer-v${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Deer Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            ./artifacts/deer-release.apk
          body: |
            ## ðŸ¦Œ Deer Release ${{ steps.tag.outputs.tag }}
            
            ### Changes
            - Built from commit: ${{ github.sha }}
            - Android APK included
            - Web app deployed to Cloudflare Pages
            
            ### Downloads
            - **Android APK**: Download the `deer-release.apk` file below
            - **Web App**: Available at your Cloudflare Pages URL
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
