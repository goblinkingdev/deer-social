
name: Deer Release
on:
  workflow_dispatch:
  push:
    tags: ['v*.*.*']

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '17'

jobs:
  build-android:
    name: Build deer for Android
    runs-on: high-end
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Install Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn --version

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Just
        uses: extractions/setup-just@v2

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Copy example build settings
        run: |
          cp .env.example .env
          cp google-services.json.example google-services.json

      - name: Build APK
        run: |
          export NODE_OPTIONS=--max-old-space-size=10240
          just dist-build-android-gradle
        env:
          GRADLE_USER_HOME: ~/.gradle

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: deer-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30
          if-no-files-found: error

  build-cloudflare:
    name: Build Web for Cloudflare
    runs-on: low-end
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Install Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn --version

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Update browserslist database
        run: npx update-browserslist-db@latest

      - name: Compile locale files
        run: yarn intl:compile

      - name: Build Web App
        run: yarn build-web

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: deer-web-build
          path: web-build/
          retention-days: 30
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: [build-android, build-cloudflare]
    runs-on: high-end
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
      discussions: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: deer-release-apk
          path: ./artifacts

      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: deer-web-build
          path: ./web-artifacts

      - name: Verify APK artifact
        run: |
          if [ ! -f "./artifacts/app-release.apk" ]; then
            echo "Error: APK file (app-release.apk) not found in artifacts"; ls -la ./artifacts/; exit 1;
          fi
          mv ./artifacts/app-release.apk ./artifacts/deer-release.apk
          ls -la ./artifacts/

      - name: Generate release tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=deer-auto-release-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -n "$last_tag" ] && [ "$last_tag" != "$GITHUB_SHA" ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" "$last_tag"..HEAD >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" HEAD~1..HEAD >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "🦌 Deer Release ${{ steps.tag.outputs.tag }}"
          draft: false
          prerelease: false
          files: |
            ./artifacts/deer-release.apk
          body: |
            ## 🦌 Deer Release ${{ steps.tag.outputs.tag }}

            ### 📝 Changelog
            ${{ steps.changelog.outputs.changelog }}

            ### 🔍 Build Info
            - Built from commit: ${{ github.sha }}
            - Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ### 📥 Downloads
            - **Android APK**: Download the `deer-release.apk` file below
            - **Web App**: Available at [deer-social.pages.dev](https://deer-social-7m8.pages.dev)

            ### 🔒 Security
            This release is signed and verified. The APK is built in un entorno limpio y reproducible.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
